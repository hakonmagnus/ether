;=============================================================================|
;  _______ _________          _______  _______                                |
;  (  ____ \\__   __/|\     /|(  ____ \(  ____ )                              |
;  | (    \/   ) (   | )   ( || (    \/| (    )|                              |
;  | (__       | |   | (___) || (__    | (____)|    By Hákon Hjaltalín.       |
;  |  __)      | |   |  ___  ||  __)   |     __)    Licensed under MIT.       |
;  | (         | |   | (   ) || (      | (\ (                                 |
;  | (____/\   | |   | )   ( || (____/\| ) \ \__                              |
;  (_______/   )_(   |/     \|(_______/|/   \__/                              |
;=============================================================================|

bits 16

;=============================================================================;
; a20_enable                                                                  ;
; Enable the address 20 line on the CPU                                       ;
;=============================================================================;
a20_enable:
    cli
    
    call a20_wait_output
    mov al, 0xAD
    out 0x64, al
    
    call a20_wait_output
    mov al, 0xD0
    out 0x64, al
    
    call a20_wait_input
    in al, 0x60
    push eax
    
    call a20_wait_output
    mov al, 0xD1
    out 0x64, al
    
    call a20_wait_output
    pop eax
    or al, 2
    out 0x60, al
    
    call a20_wait_output
    mov al, 0xAE
    out 0x64, al
    
    call a20_wait_output
    sti
    ret

;=============================================================================;
; a20_wait_output                                                             ;
; Wait output for A20                                                         ;
;=============================================================================;
a20_wait_output:
    in al, 0x64
    test al, 2
    jnz a20_wait_output
    ret

;=============================================================================;
; a20_wait_input                                                              ;
; Wait input for A20                                                          ;
;=============================================================================;
a20_wait_input:
    in al, 0x64
    test al, 1
    jz a20_wait_input
    ret